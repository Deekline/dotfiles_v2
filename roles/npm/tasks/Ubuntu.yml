---
- name: "NPM | Get latest STABLE NodeJS version"
  ansible.builtin.shell: |
    curl -sL https://nodejs.org/dist/index.json | jq -r '.[] | select(.lts) | .version' | head -n 1
  register: nodejs_latest_version
  changed_when: false

- name: "NPM | Check if NodeJS is installed"
  ansible.builtin.command: node --version
  register: nodejs_installed
  failed_when: false
  changed_when: false

- name: "NPM | Register update needed"
  ansible.builtin.set_fact:
    nodejs_install_needed: true
  when:
    nodejs_installed.rc != 0

- name: "NPM | Install NodeJS"
  become: true
  when: nodejs_install_needed is defined and nodejs_install_needed
  block:
    - name: "NPM | Get System Arch"
      ansible.builtin.set_fact:
        nodejs_arch: "{{ ansible_machine | replace('x86_64', 'x64') | replace('aarch64', 'arm64') }}"

    - name: "NPM | Download NodeJS"
      ansible.builtin.get_url:
        url: "https://nodejs.org/dist/{{ nodejs_latest_version.stdout }}/node-{{ nodejs_latest_version.stdout }}-{{ ansible_system | lower }}-{{ nodejs_arch }}.tar.xz"
        dest: /tmp/nodejs.tar.xz

    - name: "NPM | Ensure Extraction NodeJS directory exists"
      ansible.builtin.file:
        path: /usr/local/nodejs
        state: directory
        mode: "0755"

    - name: "NPM | Extract NodeJS"
      ansible.builtin.unarchive:
        src: /tmp/nodejs.tar.xz
        dest: /usr/local/nodejs
        remote_src: true
        extra_opts: "--strip-components=1"

    - name: "NPM | Symlink NodeJS Binary"
      ansible.builtin.file:
        src: /usr/local/nodejs/bin/node
        dest: /usr/local/bin/node
        state: link

    - name: "NPM | Symlink NPM Binary"
      ansible.builtin.file:
        src: /usr/local/nodejs/bin/npm
        dest: /usr/local/bin/npm
        state: link
